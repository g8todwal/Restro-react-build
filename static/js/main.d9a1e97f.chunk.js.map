{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","map","Breadcrumb","BreadcrumbItem","to","active","CardHeader","title","list","RenderMenuItem","onClick","id","width","CardImgOverlay","Menu","menu","dishes","key","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","RenderDish","RenderComments","comments","commnt","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetails","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","class","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9a1e97f.chunk.js","sourcesContent":["import  React from 'react';\r\nexport const Loading = () => {\r\n\treturn(\r\n\t\t<div className=\"col-12\">\r\n\t\t\t<span className=\"fa fa-spinner fa-3x fa-pulse fa-fw text-primary\"></span>\r\n\t\t\t<p>Loading...</p>\r\n\t\t</div>\r\n\t);\r\n}","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardBody, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n    \r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name}></CardImg>\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n           \r\n        );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n\r\n    return (\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5 mt-3\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.leader.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>About Us</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <h2>Our History</h2>\r\n                            <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                            <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <Card>\r\n                                <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                                <CardBody>\r\n                                    <dl className=\"row p-1\">\r\n                                        <dt className=\"col-6\">Started</dt>\r\n                                        <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                        <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                        <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                        <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                        <dd className=\"col-6\">$1,250,375</dd>\r\n                                        <dt className=\"col-6\">Employees</dt>\r\n                                        <dd className=\"col-6\">40</dd>\r\n                                    </dl>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <Card>\r\n                                <CardBody className=\"bg-faded\">\r\n                                    <blockquote className=\"blockquote\">\r\n                                        <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                            I'm not hungry enough to eat six.</p>\r\n                                        <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                            P. Pepe, Diversion Books, 2014</cite>\r\n                                        </footer>\r\n                                    </blockquote>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h2>Corporate Leadership</h2>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <Media list>\r\n                                {leaders}\r\n                            </Media>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb , BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\tfunction RenderMenuItem({dish , onClick}) {\r\n\t\treturn(\r\n\t\t\t <Card>\r\n\t\t\t \t<Link to={`/menu/${dish.id}`} >\r\n\t            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n\t            <CardImgOverlay>\r\n\t                <CardTitle>{dish.name}</CardTitle>\r\n\t             </CardImgOverlay>\r\n\t             </Link>\r\n\t        </Card>\r\n\t\t);\r\n\t}\r\n\r\n\tconst Menu = (props) => {\r\n\t\tconst menu = props.dishes.dishes.map(dish => {\r\n\t        return (\r\n\t            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n\t                <RenderMenuItem dish={dish} />\r\n\t            </div>\r\n\t        )\r\n\t    });\r\n\t\tif (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n\t        return (\r\n\t            <div className=\"container\">\r\n\t            \t<div className=\"row\">\r\n\t            \t\t<Breadcrumb>\r\n\t            \t\t\t<BreadcrumbItem>\r\n\t            \t\t\t\t<Link to='/home'>Home</Link>\r\n\t            \t\t\t</BreadcrumbItem>\r\n\t            \t\t\t<BreadcrumbItem active>\r\n\t            \t\t\t\tMenu\r\n\t            \t\t\t</BreadcrumbItem>\r\n\t            \t\t</Breadcrumb>\r\n\t            \t\t<div className=\"col-12\">\r\n\t            \t\t\t<h3>Menu</h3>\r\n\t            \t\t\t<hr />\r\n\t            \t\t</div>\r\n\t            \t</div>\r\n\t                <div className=\"row\">\r\n\t                    {menu}\r\n\t                </div>\r\n\t            </div>\r\n\t        );\r\n\r\n\t}\r\n        \r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem ,\r\n         Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message) ;\r\n    }\r\n\r\n\r\n    render() {   \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                              <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(9), maxLength: maxLength(11), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be 10 numbers',\r\n                                            maxLength: 'Must be 10 numbers',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" \r\n                                                name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\"  name=\"contactType\"\r\n                                        className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>                      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"8\" className=\"form-control\">\r\n                                    </Control.textarea>                      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb , BreadcrumbItem ,\r\n         Button, Modal, Label, ModalBody, ModalHeader, Row, Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val&&val.length;\r\nconst maxLength=(len)=>(val)=>!(val)|| (val.length<=len);\r\nconst minLength=(len)=>(val)=>(val) && (val.length>=len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen:false\r\n        }\r\n        \r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId , values.rating, values.author, values.comment);      \r\n    }\r\n    render(){\r\n        return(\r\n            <React-Fragment>\r\n            <Button outline color=\"secondary\" onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\".author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n            </React-Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    const RenderDish = (props) => {\r\n        return (\r\n            <Card>\r\n                <CardImg width=\"100%\" src={baseUrl + props.dish.image} alt={props.dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{props.dish.name}</CardTitle>\r\n                    <CardText>{props.dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        } \r\n        const commnt = comments.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                    </p>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <div>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {commnt}\r\n                    \r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n    const DishDetails = (props) => {\r\n        if(props.isLoading){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish) {\r\n            return (\r\n            \t<div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/menu'>Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                {props.dish.name}\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>                \r\n\t                <div className=\"row\">\r\n\t                    <div className=\"col-12 col-md-5 m-1\">\r\n\t                        <RenderDish dish = {props.dish} />\r\n\t                    </div>\r\n\t                    <div className=\"col-12 col-md-5 m-1\">\r\n\t                        <RenderComments comments = {props.comments} \r\n                                postComment={props.postComment}\r\n                                dishId={props.dish.id}/>\r\n\t                    </div>\r\n\t                </div>\r\n\t            </div>    \r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetails;","import React , {Component} from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, \r\n        Jumbotron , Button,\r\n        Modal , ModalHeader ,ModalBody ,\r\n        Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin= this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \"\r\n            + this.password.value + \"Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen}\r\n                        toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n\treturn(\r\n\t\t<div className=\"footer\">\r\n\t        <div className=\"container\">\r\n\t            <div className=\"row justify-content-center\">             \r\n\t                <div className=\"col-4 offset-1 col-sm-2\">\r\n\t                    <h5>Links</h5>\r\n\t                    <ul className=\"list-unstyled\">\r\n\t                        <li><Link to=\"/home\">Home</Link></li>\r\n\t                        <li><Link to=\"/aboutus\">About</Link></li>\r\n\t                        <li><Link to=\"/menu\">Menu</Link></li>\r\n\t                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n\t                    </ul>\r\n\t                </div>\r\n\t                <div className=\"col-7 col-sm-5\">\r\n\t                    <h5>Our Address</h5>\r\n\t                    <address>\r\n\t\t\t               133,Arjun Nagar,Durgapura,Jaipur,<br />Rajasthan,INDIA.<br />\r\n                      <i class=\"fa fa-phone \"></i>: +91-8949461981<br />\r\n                      <i class=\"fa fa-fax fa-lg\"></i>: +00000000<br />\r\n                      <i class=\"fa fa-envelope fa-lg\"></i>: \r\n                      <a href=\"mailto:gauravtodwal56@gmail.com\">gauravtodwal56@gmail.com</a>\r\n\t                    </address>\r\n\t                </div>\r\n\t                <div className=\"col-12 col-sm-4 align-self-center\">\r\n\t                    <div className=\"text-center\">\r\n\t                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n\t                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n\t                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n\t                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n\t                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n\t                        <a className=\"btn btn-social-icon\" href=\"mailto:gauravtodwal56@gmail.com\"><i className=\"fa fa-envelope-o\"></i></a>\r\n\t                    </div>\r\n\t                </div>\r\n\t            </div>\r\n\t            <div className=\"row justify-content-center\">             \r\n\t                <div className=\"col-auto\">\r\n\t                    <p>© Copyright 2020 Gaurav</p>\r\n\t                </div>\r\n\t            </div>\r\n\t        </div>\r\n\t    </div>\r\n\t);\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n\ttype: ActionTypes.ADD_COMMENT,\r\n\tpayload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response =>\r\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be submitted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n\r\n// ========= for dishes ===================\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n\r\n// ========= for comments ===================\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error'+ response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n// ========= for promos ===================\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error'+ response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n// ========= for leaders ===================\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error'+ response.status + ': ' + response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        },\r\n        error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","// ======for disehes=========\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\n// ======for comments=========\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\n\r\n// ======for promotions=========\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\n\r\n// ======for leaders=========\r\nexport const LEADERS_LOADING = 'LEADERSS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\n","import React , {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch , Route , Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {postComment ,postFeedback ,fetchDishes,fetchComments,fetchPromos,fetchLeaders} from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      leaders: state.leaders,\r\n      promotions: state.promotions\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\r\n  fetchDishes: () =>  dispatch(fetchDishes()),\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n\r\n  render(){\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home \r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leaderLoading={this.props.leaders.isLoading}\r\n            leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            postComment={this.props.postComment}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            />\r\n      );\r\n    };\r\n\r\n    const Aboutus = () => {\r\n      return(\r\n        <About leaders={this.props.leaders.leaders} isLoading={this.props.leaderLoading} errMess={this.props.leaderErrMess}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route path=\"/aboutus\" component={Aboutus} />\r\n              <Route exact path=\"/menu\" component={\r\n                () => <Menu dishes={this.props.dishes} /> } />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />          \r\n              <Redirect to=\"/home\" />          \r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps , mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n\tisLoading: true,\r\n\terrMess: null,\r\n\tdishes: []\r\n}, action) => {\r\n\tswitch(action.type) {\r\n\r\n\t\tcase ActionTypes.DISHES_LOADING:\r\n\t\t\treturn {...state, isLoading: true , errMess: null, dishes: []}\r\n\r\n\t\tcase ActionTypes.DISHES_FAILED:\r\n\t\t\treturn {...state, isLoading: false , errMess: action.payload , dishes: []}\r\n\r\n\t\tcase ActionTypes.ADD_DISHES:\r\n\t\t\treturn {...state, isLoading: false , errMess: null , dishes: action.payload}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n\terrMess: null,\r\n\tcomments: []\r\n} , action) => {\r\n\tswitch(action.type){\r\n\t\tcase ActionTypes.ADD_COMMENTS:\r\n\t\t\treturn{...state, errMess:null, comments: action.payload};\r\n\r\n\t\tcase ActionTypes.COMMENTS_FAILED:\r\n\t\t\treturn {...state, errMess: action.payload , dishes: []}\r\n\r\n\t\tcase ActionTypes.ADD_COMMENT:\r\n\t\t\tvar comment = action.payload;\r\n\t\t\treturn {...state, comments: state.comments.concat(comment)};\r\n\t\t\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        \treturn {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                   errMess: null,\r\n                                   leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        \treturn {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React , {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n\trender(){\n\t    return (\n\t    \t<Provider store = {store}>\n\t\t    \t<BrowserRouter>\n\t\t\t\t    <div>\n\t\t\t\t    \t<Main />\n\t\t\t\t    </div>\n\t\t\t    </BrowserRouter>\n\t\t    </Provider>\n\t    );\n\t  }\n}\n\nexport default App;\n","import { createStore , combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n\tconst store = createStore(\r\n\t\tcombineReducers({\r\n\t\t\tdishes: Dishes,\r\n\t\t\tcomments: Comments,\r\n\t\t\tpromotions: Promotions,\r\n\t\t\tleaders: Leaders,\r\n\t\t\t...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n\t\t}),\r\n\t\tapplyMiddleware(thunk, logger)\r\n\t\t\r\n\t);\r\n\treturn store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}